plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT' apply false
	id 'maven-publish'
	id 'java'
	id 'base'
}

version = project.mod_version
group = project.maven_group

java {
	sourceCompatibility = targetCompatibility = JavaVersion.VERSION_21
	tasks.withType(JavaCompile).configureEach {
		it.options.release = 21
	}
}

project(":sevenstars-api") {
	java {
		sourceCompatibility = targetCompatibility = JavaVersion.VERSION_21
	}
	tasks.withType(JavaCompile).configureEach {
		it.options.release = 21
	}
}

project(":middle-earth") {
	java {
		sourceCompatibility = targetCompatibility = JavaVersion.VERSION_21
	}
	tasks.withType(JavaCompile).configureEach {
		it.options.release = 21
	}
}

// TODO: uncomment this to build the of-beasts-and-wild-things mod as well
//project(":of-beasts-and-wild-things") {
//	java {
//		sourceCompatibility = targetCompatibility = JavaVersion.VERSION_21
//	}
//	tasks.withType(JavaCompile).configureEach {
//		it.options.release = 21
//	}
//}

subprojects() {
	apply plugin: 'fabric-loom'

	version = project.mod_version
	group = project.maven_group

	base {
		archivesName = project.archives_base_name
	}

	dependencies {
		minecraft "com.mojang:minecraft:${project.minecraft_version}"
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
		modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
		modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	}

	processResources {
		inputs.property "version", project.version

		filesMatching("fabric.mod.json") {
			expand "version": project.version
		}
	}

	sourceSets.main.resources.srcDirs += 'src/main/generated'

	jar {
		from("LICENSE") {
			rename { "${it}_${project.archives_base_name}"}
		}
	}
}

// root project will not build anything
jar.enabled = false

tasks.register("copyFiles", Copy) {
	rootProject.subprojects.each {project ->
		from project.name + '/build/libs/' + project.archives_base_name + '-' + project.version + '.jar'
	}
	into "build/libs"
}

// make sure the copy task runs after each subproject is built
copyFiles.dependsOn {
	subprojects.collect {
		it.tasks.named("build")
	}
}

build {
	finalizedBy copyFiles
}
